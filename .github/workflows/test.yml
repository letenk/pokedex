name: Run unit tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: pokedex_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.19
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: create env file
      env:
        GIN_MODE: ${{ secrets.GIN_MODE}}
        DB_DRIVER: ${{ secrets.DB_DRIVER}}
        DB_SOURCE_TEST: ${{ secrets.DB_SOURCE_TEST}}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        AWS_Region: ${{ secrets.AWS_Region }}
        AWS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
        AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
        AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
      run: |
        touch app.env
        echo GIN_MODE=$GIN_MODE >> app.env
        echo DB_DRIVER=$DB_DRIVER >> app.env
        echo DB_SOURCE_TEST=$DB_SOURCE_TEST >> app.env
        echo JWT_SECRET=$JWT_SECRET >> app.env
        echo AWS_Region=$AWS_Region >> app.env
        echo AWS_KEY_ID=$AWS_KEY_ID >> app.env
        echo AWS_SECRET_KEY=$AWS_SECRET_KEY >> app.env
        echo AWS_BUCKET_NAME=$AWS_BUCKET_NAME >> app.env

    - name: Create table and seed sample data user, category, types
      run: make run-migrate-seed-test 

    - name: Test
      run: make test